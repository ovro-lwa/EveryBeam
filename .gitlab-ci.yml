stages:
  - prepare
  - build
  - oskar-comparison
  - deploy

build-base:
  stage: prepare
  script:
    - docker build --tag everybeam_base:${CI_COMMIT_SHORT_SHA} -f ./docker/Dockerfile-base .

clang-format:
  except:
    - schedules
  stage: build
  image: everybeam_base:${CI_COMMIT_SHORT_SHA}
  before_script:
    - apt-get -y install python3-pip
    - pip3 install clang-format==9.0.0
  script: 
    - ./scripts/run-clang-format.sh

# Build a debug version of EveryBeam from the base image
test-and-coverage:
  except:
    - schedules
  stage: build
  image: everybeam_base:${CI_COMMIT_SHORT_SHA}
  before_script:
    - apt-get -y install python3-pip
    - pip3 install gcovr
  script:
    # Download casacore wsrt measures
    - wget -q ftp://ftp.astron.nl/outgoing/Measures/WSRT_Measures.ztar && tar -xf WSRT_Measures.ztar -C /var/lib/casacore/data/ && rm -f WSRT_Measures.ztar
    # Build in Debug mode
    - mkdir build && cd build
    - cmake -DCMAKE_INSTALL_PREFIX=.. -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS="-coverage" -DCMAKE_EXE_LINKER_FLAGS="-coverage" ..
    - make install -j8
    - ctest -j4 -T test
    # Capture coverage
    - gcovr -r .. -e '.*/external/.*' -e '.*/CompilerIdCXX/.*' -e '.*/test/.*' -e '.*/demo/.*'
    - gcovr -r .. -e '.*/external/.*' -e '.*/CompilerIdCXX/.*' -e '.*/test/.*' -e '.*/demo/.*' --xml > coverage.xml
  artifacts:
    reports:
      # NOE: artifacts only work with relative paths...
      cobertura: build/coverage.xml
      junit: build/cpp/test/unittests.xml

build-everybeam:
  stage: build
  dependencies:
    - build-base
  script:
    - docker build --build-arg BASE_TAG=${CI_COMMIT_SHORT_SHA} --tag everybeam:${CI_COMMIT_SHORT_SHA} -f ./docker/Dockerfile-everybeam .

build-doc:
  stage: build
  except:
    - schedules
  image: everybeam_base:${CI_COMMIT_SHORT_SHA}
  script:
    - EVERYBEAM_PATH=$PWD
    - mkdir build && cd build
    - cmake $EVERYBEAM_PATH
    - make doc
  artifacts: # Only for master the docs are published; for branches it may be useful to browse the artifacts
    paths:
    - build/doc/html

build-compare-oskar:
  stage: oskar-comparison
  image: everybeam:${CI_COMMIT_SHORT_SHA}
  only:
    - schedules
    - master
  dependencies:
    - build-everybeam
  before_script:
    - apt-get -y install python3-pip
    # Install python requirements for the OSKAR "integration" test
    - pip3 install numpy==1.19.0 scipy h5py astropy tqdm matplotlib
    - mkdir -p /opt/oskar/build
    - cd /opt/oskar && git clone https://github.com/OxfordSKA/OSKAR.git
    - cd /opt/oskar/build
  script:
    # OSKAR cpp install
    - cmake -DCMAKE_INSTALL_PREFIX=.. -DCMAKE_BUILD_TYPE=Debug -DCMAKE_EXE_LINKER_FLAGS="-coverage" ../OSKAR/
    - make -j8
    - make install
    # Python install
    - export OSKAR_INC_DIR=/opt/oskar/include && export OSKAR_LIB_DIR=/opt/oskar/lib
    - cd ./../OSKAR/python && python3 setup.py install 
    - export PATH=/opt/oskar/bin:$PATH
    # Run OSKAR comparison, set some env variables for this session
    - export NPIXELS=8 && export APPLY_TRANSPOSE=OFF && MAX_ORDER=3 && TOLERANCE=1e-12
    - cd /opt/everybeam/build
    - make VERBOSE=1 comparison-oskar-basefunctions
    # Run OSKAR stationresponse comparison
    - export NPIXELS=32 && TOLERANCE=1e-5
    - make VERBOSE=1 comparison-oskar-stationresponse

deploy-doc:
  stage: deploy
  except:
    - schedules
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | base64 -d | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -H dop288 > ~/.ssh/known_hosts
  script:
    - scp -r build/doc/html/* citt@dop288:EveryBeam
  only:
    refs:
      - master

deploy-image:
  variables:
    GIT_STRATEGY: none
  except:
    - schedules
  only:
    - master
  stage: deploy
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker tag everybeam:${CI_COMMIT_SHORT_SHA} $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:latest
