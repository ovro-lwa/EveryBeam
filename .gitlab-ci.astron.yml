# Copyright (C) 2021 ASTRON (Netherlands Institute for Radio Astronomy)
# SPDX-License-Identifier: GPL-3.0-or-later

# This file contains the pipelines that run on the Astron repository of IDG,
# which is at https://git.astron.nl/RD/idg

include: .gitlab-ci.common.yml

deploy-doc:
  stage: deploy
  needs: ["build-doc-2204"]
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | base64 -d | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -H dop810 > ~/.ssh/known_hosts
  script:
    - scp -r build/doc/html/* citt@dop810:EveryBeam
  rules:
    # Only add job when ran on master and not a scheduled job, i.e. when merging
    - if: '$CI_COMMIT_BRANCH == "master" && $CI_PIPELINE_SOURCE != "schedule"'

deploy-package-2204:
  stage: deploy
  needs: ["versioning","build-package-2204"]
  image: $EVERYBEAM_IMAGE
  allow_failure: true
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  script:
    - cd everybeam_package
    - export FILES=$(ls -1 $PWD/*.deb)
    - echo UPLOADING files $FILES
    # The following example command must be executed first or else the update will fail because there is no repository
    # create_repo.py -a amd64 -c testing -d bionic --gpg-key ${GPG_KEY} --gpg-passphrase ${GPG_PASS} schaap
    - ../external/schaap-packaging/update_repo.py --cleanup -d bionic --gpg-key ${GPG_KEY} --gpg-passphrase ${GPG_PASS} schaap ${FILES}
  rules:
    # Only deploy packages when building the default branch or a tag, or when UPLOAD_PACKAGE is set manually.
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
    - if: '$CI_COMMIT_TAG'
    - if: '$UPLOAD_PACKAGE'

check-stack:
  variables:
    # Pass commit hash to downstream pipeline
    EVERYBEAM_TRIGGER_HASH: $CI_COMMIT_SHA
  stage: deploy
  needs: []
  trigger:
    project: RD/schaap-stack
    branch: master
    # This will mirror the status of the downstream pipeline
    strategy: depend
  rules:
    # Only add job during merge request event
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
